
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class GUI_Paciente extends javax.swing.JFrame {

    Statement st;
    DefaultTableModel dtm;
    DefaultTableModel modelo;
    private String Codigo;
    private String Nome;
    private String Idade;
    private Date DataNasc;
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

    public GUI_Paciente() {
        initComponents();

        TestaData();

        // Cria o objeto DBConexao para conectar ao banco de dados
        try {
            st = new DBConexao().getConnection();
            Listar();
            jtTabela.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent event) {
                    preencherCampos();
                }
            });
        } catch (Exception e) {
            System.out.println("Error: " + e.toString() + e.getMessage());
        }

    }

    public void TestaData() {
        String dataRecebida = "02/06/2020";
        if (DataValida(dataRecebida)) {
            Date data = StringToDate(dataRecebida);
            System.out.println("Data banco = " + data);
            System.out.println("Data String = " + DateToString(data));

            Date dataNormal = StringToDate(dataRecebida);
            System.out.println("dataNormal = " + dataNormal);
            Date dataSQL = new java.sql.Date(dataNormal.getTime());
            System.out.println("dataSQL = " + dataSQL);
            System.out.println("Data banco para string = " + DateToString(dataSQL));
        } else {
            JOptionPane.showMessageDialog(this, "Data no Formato Inv√°lido!!\nA data deve estar no formato dd/MM/yyyy");
        }

    }

    public String DateToString(Date data) {
        return formato.format(data);
    }

    public Date StringToDate(String data) {
        try {
            //SimpleDateFormat dataBanco = new SimpleDateFormat("yyyy-MM-dd");
            return formato.parse(data);
        } catch (ParseException ex) {
            Logger.getLogger(GUI_Paciente.class.getName()).log(Level.SEVERE, null, ex);
            return null;
        }
    }

    public boolean DataValida(String data) {
        try {
            formato.parse(data);
            return true;
        } catch (ParseException ex) {
            return false;
        }
    }

    private void BuscaValores() {
        Codigo = jtfCodigo.getText();
        Nome = jtfNome.getText();
        DataNasc = StringToDate(jtfDataNasc.getText());
        DataNasc = new java.sql.Date(DataNasc.getTime());
    }

    private void Listar() {
        String colunas[] = {"Cod", "Nome", "Data Nasc."};
        modelo = new DefaultTableModel(colunas, 0);

        try {
            ResultSet rec = st.executeQuery("SELECT codigo, nome, DATE_FORMAT(data_nascimento, '%d/%m/%Y') as data_nascimento FROM Paciente");
            while (rec.next()) {
                String codigo = rec.getString("codigo");
                String nome = rec.getString("nome");
                String nascimento = rec.getString("data_nascimento");

                modelo.addRow(new Object[]{codigo, nome, nascimento});
            }
        } catch (SQLException s) {
            //System.out.println("SQL Error: " + s.toString() + " " + s.getErrorCode() + " " + s.getSQLState());
            JOptionPane.showMessageDialog(this, "Erro ao listar!! " + s.toString());
        }
        jtTabela.setModel(modelo);
    }

    public void preencherCampos() {
        jtfCodigo.setText(jtTabela.getModel().getValueAt(jtTabela.getSelectedRow(), 0).toString());
        jtfNome.setText(jtTabela.getModel().getValueAt(jtTabela.getSelectedRow(), 1).toString());
        jtfDataNasc.setText(jtTabela.getModel().getValueAt(jtTabela.getSelectedRow(), 2).toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbListar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jbOrdenar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jtfCodigo = new javax.swing.JTextField();
        jtfNome = new javax.swing.JTextField();
        jtfDataNasc = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jftfDataNasc = new javax.swing.JFormattedTextField();
        jbIncluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Java DBA");

        jbListar.setText("Listar");
        jbListar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbListarMouseClicked(evt);
            }
        });

        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Cod", "Nome", "Data Nasc."
            }
        ));
        jScrollPane2.setViewportView(jtTabela);

        jbOrdenar.setText("Ordenar por Nome");

        jLabel1.setText("Codigo:");

        jLabel2.setText("Nome:");

        jLabel3.setText("Data Nasc.:");

        jftfDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));

        jbIncluir.setText("Incluir");
        jbIncluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbIncluirMouseClicked(evt);
            }
        });

        jbAlterar.setText("Alterar");
        jbAlterar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbAlterarMouseClicked(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbExcluirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                            .addComponent(jtfNome)
                            .addComponent(jtfDataNasc))
                        .addGap(61, 61, 61)
                        .addComponent(jftfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbAlterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbIncluir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbOrdenar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbListar, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbListar, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jbOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbListarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbListarMouseClicked
        Listar();
    }//GEN-LAST:event_jbListarMouseClicked

    private void jbIncluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbIncluirMouseClicked
        String dataRecebida = jtfDataNasc.getText();
        if (DataValida(dataRecebida)) {
            BuscaValores();

            String values = "'" + Nome + "', '" + DataNasc + "'";
            String sql = "INSERT INTO Paciente (nome, data_nascimento) VALUES(" + values + ")";

            System.out.println(sql);
            try {
                int resp = st.executeUpdate(sql);
                if (resp == 1) {
                    Listar();
                }
            } catch (SQLException s) {
                JOptionPane.showMessageDialog(this, "Informa√ß√µes n√£o incluida!! " + s.toString());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data no Formato Inv√°lido!!\nA data deve estar no formato dd/MM/yyyy");
        }
    }//GEN-LAST:event_jbIncluirMouseClicked

    private void jbAlterarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbAlterarMouseClicked
        String dataRecebida = jtfDataNasc.getText();
        if (DataValida(dataRecebida)) {
            BuscaValores();

            String set = " SET nome='" + Nome + "', data_nascimento='" + DataNasc + "'";
            String where = " WHERE codigo=" + Codigo;
            String sql = "UPDATE Paciente" + set + where;

            System.out.println(sql);
            try {
                System.out.println("Antes de Executar");     
                int resp = st.executeUpdate(sql);
                System.out.println("Depois de Executar");     
                if (resp == 1) {
                    //Listar();
                }
            } catch (SQLException s) {
                JOptionPane.showMessageDialog(this, "Informa√ß√µes n√£o alteradas!! " + s.toString());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data no Formato Inv√°lido!!\nA data deve estar no formato dd/MM/yyyy");
        }
    }//GEN-LAST:event_jbAlterarMouseClicked

    private void jbExcluirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbExcluirMouseClicked
        int row = jtTabela.getSelectedRow();
        int column = 0; //coluna do codigo
        String codigoSelecionado = jtTabela.getValueAt(row, column).toString();
        String sql = "DELETE FROM Paciente WHERE codigo=" + codigoSelecionado;

        try {
            int resp = st.executeUpdate(sql);
            if (resp == 1) {
                Listar();
            }
        } catch (SQLException s) {
            JOptionPane.showMessageDialog(this, "Informa√ß√µes n√£o excluidas!! " + s.toString());
        }
    }//GEN-LAST:event_jbExcluirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Paciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Paciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbIncluir;
    private javax.swing.JButton jbListar;
    private javax.swing.JButton jbOrdenar;
    private javax.swing.JFormattedTextField jftfDataNasc;
    private javax.swing.JTable jtTabela;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDataNasc;
    private javax.swing.JTextField jtfNome;
    // End of variables declaration//GEN-END:variables
}
